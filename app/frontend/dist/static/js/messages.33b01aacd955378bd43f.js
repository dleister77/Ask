(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["messages"],{

/***/ "+xvQ":
/*!*******************************************!*\
  !*** ./src/components/nav-list-button.js ***!
  \*******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("const nav_list_button = {\n    props: {\n        eventSignal: {\n            type: String,\n            required: true\n        },\n    },\n    inheritAttrs: false,\n    template: `\n        <li class=\"nav-item\">\n            <button\n                ref=\"b\"\n                type=\"button\"\n                class=\"btn btn-link nav-link\"\n                v-bind=\"$attrs\"\n                v-on:click=\"$emit(eventSignal)\">\n            <slot></slot>\n            </button>\n        </li>\n    `\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (nav_list_button);\n\n//# sourceURL=webpack:///./src/components/nav-list-button.js?");

/***/ }),

/***/ "Gk1K":
/*!****************************************!*\
  !*** ./src/components/message-read.js ***!
  \****************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("let message_read = {\n    props:{\n        message: Object,\n    },\n    methods: {\n        localize_time: function(){\n            let time = new Date(this.message.timestamp);\n            return time.toLocaleString('en-us', {dateStyle:\"long\", timeStyle: \"short\"});\n        }\n    },\n    template:`\n    <div>\n        <br>\n        <div class=\"row justify-content-between\" id=\"read_header\">\n            <div class=\"col-8\">\n                <p class=\"message-read\">From: {{ message.sender_full_name }} </p>\n                <p class=\"message-read\">Subject: {{ message.subject }}</p>\n            </div>\n            <div class=\"col-4\">\n                <p class=\"message-read\">{{ localize_time() }}</p>\n            </div>\n        </div>\n        <br>\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <p class=\"message-read\" id=\"message-read-body\">{{ message.body }}</p>\n            </div>\n        </div>\n    </div>`\n}\n/* harmony default export */ __webpack_exports__[\"a\"] = (message_read);\n\n//# sourceURL=webpack:///./src/components/message-read.js?");

/***/ }),

/***/ "OTWU":
/*!****************************************!*\
  !*** ./src/pages/messages/messages.js ***!
  \****************************************/
/*! exports provided: default */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"vDqi\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"oCYn\");\n/* harmony import */ var _scripts_forms_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scripts/forms.js */ \"s5Bw\");\n/* harmony import */ var _components_message_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../components/message-form */ \"OY3T\");\n/* harmony import */ var _components_message_row__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../components/message-row */ \"wumF\");\n/* harmony import */ var _components_message_read__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../components/message-read */ \"Gk1K\");\n/* harmony import */ var _components_pagination_nav__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../components/pagination-nav */ \"bfYB\");\n/* harmony import */ var _components_folder_nav__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../components/folder-nav */ \"yPs9\");\n\n\n\n\n\n\n\n\n\n\n\n\nconst messageApp = new vue__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"]({\n    el: '#messageApp',\n    delimiters: ['[[', ']]'],\n    components:{\n        'message-row': _components_message_row__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"],\n        'message-read': _components_message_read__WEBPACK_IMPORTED_MODULE_5__[/* default */ \"a\"],\n        'pagination-nav': _components_pagination_nav__WEBPACK_IMPORTED_MODULE_6__[/* default */ \"a\"],\n        'message-form': _components_message_form__WEBPACK_IMPORTED_MODULE_3__[/* default */ \"a\"],\n        'folder-nav': _components_folder_nav__WEBPACK_IMPORTED_MODULE_7__[/* default */ \"a\"],\n    },\n    data: {\n        active_index: null,\n        messages: list,//defined in script tag\n        csrf: csrf,\n        eventSignal: {\n            updateActive: \"update-active-message\",\n            newMessage: \"new-message\",\n            backToLast: \"back-to-last\",\n            replyToMessage: \"reply-to-message\",\n            moveMessage: 'move-message',\n        },\n        is_reply: false,\n        newMessage: {\n            message_user_id: \"\",\n            recipient_id: \"\",\n            recipient: \"\",\n            subject: \"\",\n            body: \"\",\n        },\n        pagination_urls: pagination_urls,//from script tag\n        selectedMessages: [],\n        show: {\n            newMessage: false,\n        },\n        urls: links,//from script tag\n    },\n    computed: {\n        active_message: function(){\n            if (0 <= this.active_index  && this.active_index< this.messages.length){\n                return this.messages[this.active_index]\n            }\n        },\n        folderIsVisible: function(){\n            return !this.is_active && !this.newMessageIsVisible;\n        },\n        is_active: function(){\n            return this.active_index != null;\n        },\n        messageIsVisible: function(){\n            return this.is_active && !this.newMessageIsVisible;\n        },\n        moveLinksVisible: function(){\n            return this.selectedMessages.length > 0\n        },\n        newMessageIsVisible: function(){\n            return this.show.newMessage\n        },\n    },\n    methods: {\n        markAsRead: function(){\n            let self = this;\n            let data = {id: this.active_message.id, csrf_token: this.csrf};\n            let form = Object(_scripts_forms_js__WEBPACK_IMPORTED_MODULE_2__[/* makeForm */ \"d\"])(data)\n            axios__WEBPACK_IMPORTED_MODULE_0___default.a.post(this.urls.updateMessageRead, form)\n            .then(function(response){\n                if (response.data.status == \"success\"){\n                    self.active_message.read = true;\n                }\n                else {\n                    console.log(\"Error: mark as read failed.\")\n                }\n            })\n            .catch(function(error){\n                console.log(error);\n            })\n        },\n        moveMessage: function(status){\n            let form_data = {\n                'message_id': this.selectedMessages.toString(),\n                'tag': status,\n                'csrf_token': this.csrf\n            };\n            Object(_scripts_forms_js__WEBPACK_IMPORTED_MODULE_2__[/* postForm */ \"e\"])(this.urls.move, form_data);\n        },\n        replyToMessage: function(){\n            this.show.newMessage = true;\n            this.is_reply = true;\n        },\n        reverseMessages: function(){\n            this.messages.reverse();\n        },\n        showMessage: function(message){\n            this.active_index = this.messages.indexOf(message);\n            this.selectedMessages.push(message.id);\n            if (!message.read){\n                this.markAsRead()\n            }\n        },\n        showNewMessage: function(){\n            this.show.newMessage = true;\n            this.active_index = null;\n        },\n        showLastPage: function(){\n            if (this.messageIsVisible){\n                this.active_index = null;\n                this.selectedMessages = [];\n            } else if (this.newMessageIsVisible && this.active_index != null){\n                this.show.newMessage = false;\n                this.is_reply = false;\n            } else {\n                this.active_index = null;\n                this.show.newMessage = false;\n                this.is_reply = false;\n            }\n        },\n        updateActiveMessage: function(adjust){\n            if (0 <= this.active_index + adjust < this.messages.length){  \n                this.active_index += adjust\n            }\n        },\n        updateSelectedMessages: function(update){\n            let [addToSelected, id] = update;\n            if (addToSelected){\n                this.selectedMessages.push(id);\n            } else {\n                this.selectedMessages = this.selectedMessages.filter(value => value != id);\n            }\n        },\n        updateRecipientID: function(value){\n            this.newMessage.recipient_id = value;\n        }\n    },\n    mounted: function(){\n        this.$nextTick();\n    },\n    template: `\n    <div>\n        <folder-nav v-bind:urls=\"urls\"\n            v-bind:message-is-visible=\"messageIsVisible\"\n            v-bind:folder-is-visible=\"folderIsVisible\"\n            v-bind:new-message-is-visible=\"newMessageIsVisible\"\n            v-bind:move-links-visible=\"moveLinksVisible\"\n            v-bind:event-signal=\"eventSignal\"\n            v-on:update-active-message=\"updateActiveMessage($event)\"\n            v-on:new-message=\"showNewMessage\"\n            v-on:back-to-last=\"showLastPage\"\n            v-on:reply-to-message=\"replyToMessage\"\n            v-on:move-message=\"moveMessage($event)\">\n        </folder-nav>\n\n        <div v-if=\"folderIsVisible\" class=\"container-fluid p-1\" id=\"folder\">\n            <div class=\"row\">\n                <table class=\"table table-hover d-flex flex-column\">\n                    <thead>\n                        <tr class=\"d-flex folder-header\">\n                            <th class=\"d-none d-md-block col-1\" scope=\"col\"><input id=\"select_all\" type=\"checkbox\"></th>\n                            <th class=\"\" hidden scope = \"col\"></th>\n                            <th class=\"col-2\" scope=\"col\">From</th>\n                            <th class=\"col-2\" scope=\"col\">Subject</th>\n                            <th class=\"col-6\" scope=\"col\">Body</th>\n                            <th class=\"col-1\" scope=\"col\">Time Sent</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr is=\"message-row\"\n                            v-for=\"message in messages\"\n                            v-bind:message=\"message\"\n                            v-bind:key=\"message.id\"\n                            v-on:show-message=\"showMessage(message)\"\n                            v-on:selected-messages=\"updateSelectedMessages\">\n                        </tr>\n                    </tbody>\n                </table>    \n                <button v-on:click=\"reverseMessages\">Reverse Messages</button>\n            </div>\n            <br>\n            <pagination-nav\n            v-bind:pagination_urls=\"pagination_urls\"\n            v-bind:pages=\"pagination_urls.pages\"/>\n        </div>\n\n        <div v-if=\"messageIsVisible\">\n            <message-read v-bind:message=\"active_message\"></message-read>\n        </div>\n\n        <message-form\n            id=\"message-form\"\n            v-if=\"newMessageIsVisible\"\n            v-bind:urls=\"urls\"\n            v-bind:csrf=\"csrf\"\n            v-bind:is_active=\"is_active\"\n            v-bind:active_message=\"active_message\"\n            v-bind:is_reply=\"is_reply\"\n            v-on:message_sent=\"show.newMessage=false\"/>\n    </div>    \n    `\n});\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (messageApp);\n\n\n\n//# sourceURL=webpack:///./src/pages/messages/messages.js?");

/***/ }),

/***/ "OWs1":
/*!****************************************!*\
  !*** external "VueBootstrapTypeahead" ***!
  \****************************************/
/*! no static exports found */
/*! exports used: default */
/***/ (function(module, exports) {

eval("module.exports = VueBootstrapTypeahead;\n\n//# sourceURL=webpack:///external_%22VueBootstrapTypeahead%22?");

/***/ }),

/***/ "OY3T":
/*!****************************************!*\
  !*** ./src/components/message-form.js ***!
  \****************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var _form_input_group__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form-input-group */ \"rdGm\");\n/* harmony import */ var _form_textbox_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./form-textbox-group */ \"r7/v\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"vDqi\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ \"LvDl\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _typeahead_mixin__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./typeahead_mixin */ \"fi43\");\n\n\n\n\n\n\n\n\nlet message_form = {\n    components: {\n        'form-input-group': _form_input_group__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"],\n        'form-textbox-group': _form_textbox_group__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"],\n    },\n    mixins: [_typeahead_mixin__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"]],\n    data: function(){\n        return {\n            form: {\n                message_user_id: \"\",\n                recipient_id: \"\",\n                recipient: \"\",\n                subject: \"\",\n                body: \"\",\n            },\n            typeahead: {\n                name_field: 'recipient',\n                id_field: 'recipient_id'\n            }\n        }\n    },\n    props:{\n        active_message: {\n            type: Object,\n            required: false,\n        },\n        csrf: {\n            type: String,\n            required: true,\n        },\n        is_active: {\n            type: Boolean,\n            required: false,\n        },\n        is_reply: {\n            type: Boolean,\n            required: false,\n        },\n    },\n    methods:{\n        replyToMessage: function(){\n            this.form.message_user_id = this.active_message.id;\n            this.form.recipient_id = this.active_message.sender_id;\n            this.form.recipient = this.active_message.sender_full_name;\n            if (this.active_message.subject.startsWith(\"Re:\")){\n                this.form.subject = this.active_message.subject;\n            } else {\n                this.form.subject = `Re: ${this.active_message.subject}`;\n            }\n            this.form.body = `\\n\\nOn ${this.active_message.timestamp}, ${this.active_message.sender_full_name} wrote:\\n${this.active_message.body}`\n        },\n        sendMessage: function(){\n            let self = this;\n            const f = new FormData(document.getElementById('message-form'));\n            axios__WEBPACK_IMPORTED_MODULE_2___default.a.post(this.urls.send_message, f)\n            .then(function(response){\n                if (response.data.status == 'success'){\n                    self.$emit('message_sent');\n                    alert(\"Message sent\");\n                } else {\n                    let message = \"Unabled to send message. Please correct errors:\\n\"\n                    message += response.data.errorMsg.join('\\n');\n                    alert(message);\n                }\n            })\n            .catch(function(error){\n                console.log(error);\n                alert(\"Error: Unable to send message.  Please reload and try again.\")\n            })\n        },\n        suggestionSerializer: function(person){\n            return person.full_name;\n        }\n\n    },\n    mounted: function(){\n        if (this.is_reply == true){\n            this.replyToMessage();\n        }\n    },\n    watch:{\n        'form.recipient': function(val){\n            const debouncedGetSuggestions = lodash__WEBPACK_IMPORTED_MODULE_3___default.a.debounce(this.getSuggestions, 500);\n            debouncedGetSuggestions();\n        },\n    },\n    template: `\n    <form\n    method=\"POST\"\n    v-bind:action=\"urls.send_message\"\n    id=\"message-form\">\n        <input v-bind=\"{name: 'csrf_token', value: csrf, type:'hidden'}\">\n        <input v-model=\"form.message_user_id\" v-bind=\"{name: 'message_user_id', type:'hidden'}\">\n        <input v-model=\"form.recipient_id\" v-bind=\"{name: 'recipient_id', type:'hidden'}\">\n        <input v-model=\"form.recipient\" name='recipient' type='hidden'>\n        <div class=\"form-group\">\n        <label\n          for=\"recipient_typeahead\"\n          v-if=\"!is_active\">To</label>\n        <vue-bootstrap-typeahead\n            id=\"recipient_typeahead\"\n            name=\"recipient_typeahead\"\n            v-if=\"!is_active\"\n            v-bind:data=\"typeahead.suggestions\"\n            v-model=\"form.recipient\"\n            v-bind:serializer=\"suggestionSerializer\"\n            placeholder=\"Enter name of friend...\"\n            @hit=\"typeahead.selected=$event\"/>\n        </div>\n        <form-input-group\n            v-if=\"is_active\"\n            v-model=\"form.recipient\"\n            v-bind=\"{name: 'recipient', readonly: true}\">To\n        </form-input-group>            \n        <form-input-group v-model=\"form.subject\" v-bind=\"{name: 'subject'}\">Subject</form-input-group>\n        <form-textbox-group v-model=\"form.body\" v-bind=\"{name: 'body'}\">Message Body</form-textbox-group>\n        <button\n            class=\"btn btn-primary btn-block submit\"\n            type=\"submit\"\n            v-on:click.prevent=\"sendMessage\"\n            >\n            Submit\n        </button>\n    </form>\n    `,\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (message_form);\n\n//# sourceURL=webpack:///./src/components/message-form.js?");

/***/ }),

/***/ "bfYB":
/*!******************************************!*\
  !*** ./src/components/pagination-nav.js ***!
  \******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("let pagination_nav = {\n    props: {\n        pagination_urls: {\n            type: Object,\n            required: true,\n        },\n        pages: {\n            type: Array,\n            required: true,\n        }\n    },\n    template:`\n    <nav aria-label=\"Page navigation\">\n        <ul class=\"pagination\">\n            <li\n              v-if=\"pagination_urls.prev\"\n              class=\"page-item\">\n              <a\n                class=\"page-link\"\n                v-bind:href=\"pagination_urls.prev\">\n                Previous\n               </a>\n            </li>\n\n            <li \n              class=\"page-item\"\n              v-for=\"page in pages\"\n              v-bind:key=\"page[0]\">\n              <a\n                class=\"page-link\"\n                v-bind:href=\"page[1]\">\n                {{page[0]}}\n              </a>\n            </li>\n\n            <li\n              v-if=\"pagination_urls.next\"\n              class=\"page-item\">\n              <a\n                class=\"page-link\"\n                v-bind:href=\"pagination_urls.next\">\n                Next\n              </a>\n            </li>\n        </ul>\n    </nav>            \n    `\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (pagination_nav);\n\n//# sourceURL=webpack:///./src/components/pagination-nav.js?");

/***/ }),

/***/ "fi43":
/*!*******************************************!*\
  !*** ./src/components/typeahead_mixin.js ***!
  \*******************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var VueBootstrapTypeahead__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! VueBootstrapTypeahead */ \"OWs1\");\n/* harmony import */ var VueBootstrapTypeahead__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(VueBootstrapTypeahead__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"LvDl\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n\nconst typeahead_mixin = {\n    components: {\n        'vue-bootstrap-typeahead': VueBootstrapTypeahead__WEBPACK_IMPORTED_MODULE_0___default.a,\n    },\n    data: function() {\n        return {\n            form: {\n                id: \"\",\n                name: \"\", \n            },\n            typeahead: {\n                suggestions: [],\n                selected: null,\n                include_id: true,\n                name_field: 'name',\n                id_field: 'id',\n            },\n            urls: links,\n        }\n    },\n    methods:{\n        makeQueryUrl: function(){\n            let input = this.form[this.typeahead.name_field];\n            return `${this.urls.autocomplete}?name=${encodeURIComponent(input)}`\n        },\n        getSuggestions: async function(){\n            const res = await fetch(this.makeQueryUrl());\n            const suggestions = await res.json();\n            this.typeahead.suggestions = suggestions;\n        },\n        suggestionSerializer: function(item){\n            return `${item.name}`\n        }\n    },        \n    watch: {\n        'form.name': function(val){\n            const debouncedGetSuggestions = lodash__WEBPACK_IMPORTED_MODULE_1___default.a.debounce(this.getSuggestions, 500);\n            debouncedGetSuggestions();\n        },\n        'typeahead.selected': function(){\n            if (this.typeahead.include_id == true){\n                this.form[this.typeahead.id_field] = this.typeahead.selected.id\n            }\n        }\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (typeahead_mixin);\n\n//# sourceURL=webpack:///./src/components/typeahead_mixin.js?");

/***/ }),

/***/ "r7/v":
/*!**********************************************!*\
  !*** ./src/components/form-textbox-group.js ***!
  \**********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("let form_textbox_group = {\n    props: {\n        name: {\n            type: String,\n            required: true,\n        },\n        placeholder: {\n            type: String,\n            required: false,\n        },\n        readonly: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        value: {\n            required: false,\n            default: \"\",\n        },\n        rows: {\n            type: Number,\n            required: false,\n            default: 6,\n        }\n    },\n    methods: {\n        updateValue: function(value){\n            this.$emit('input', value);\n        }   \n    },\n    template: `\n    <div class=\"form-group\">\n        <label\n          v-bind:for=\"name\">\n          <slot></slot>\n        </label>\n        <textarea\n          class=\"form-control\"\n          v-bind=\"$props\"\n          v-bind:id=\"name\"\n          v-on:change=\"updateValue($event.target.value)\">\n        </textarea>\n    </div>\n    `\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (form_textbox_group);\n\n\n//# sourceURL=webpack:///./src/components/form-textbox-group.js?");

/***/ }),

/***/ "rdGm":
/*!********************************************!*\
  !*** ./src/components/form-input-group.js ***!
  \********************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("\nlet form_input_group = {\n    props: {\n        name: {\n            type: String,\n            required: true,\n        },\n        placeholder: {\n            type: String,\n            required: false,\n        },\n        readonly: {\n            type: Boolean,\n            required: false,\n            default: false,\n        },\n        value: {\n            type: String,\n            required: false,\n            default: \"\",\n        },\n        type: {\n            type: String,\n            required: false,\n            default: \"text\"\n        },\n        autocompleteUrl: {\n            type: String,\n            required: false,\n        }           \n    },\n    methods: {\n        updateValue: function(value){\n            this.$emit('input', value);\n        },\n    },\n    template: `\n    <div class=\"form-group\">\n        <label\n          v-bind:for=\"name\">\n          <slot></slot>\n        </label>\n        <input\n          class=\"form-control\"\n          v-bind=\"$props\"\n          v-bind:id=\"name\"\n          v-on:change=\"updateValue($event.target.value)\">\n        </input>\n    </div>\n    `,\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (form_input_group);\n\n//# sourceURL=webpack:///./src/components/form-input-group.js?");

/***/ }),

/***/ "s5Bw":
/*!******************************!*\
  !*** ./src/scripts/forms.js ***!
  \******************************/
/*! exports provided: categoryGet, categoryGetList, getSectorList, makeForm, postForm */
/*! exports used: categoryGet, categoryGetList, getSectorList, makeForm, postForm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return categoryGet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return categoryGetList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return getSectorList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return makeForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return postForm; });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"vDqi\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n\n\nlet category_get_url = '/categorylist';\nlet sector_get_url = '/sectorlist';\n\n\nfunction categoryGet(url, sector, category_id){\n    axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(url, {\n        params: {\n            sector: sector,\n        },\n    })\n    .then(function(response) {\n        updateSelectFieldOptions(response, category_id);\n    })\n    .catch(function(error){\n        console.log(error);\n    });\n}\n\nasync function categoryGetList(sector=null){\n    try {\n        let response = await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get(category_get_url, {\n                        params: {\n                            sector: sector,\n                        },\n        });\n        return response.data;\n    } catch (error){\n        console.log(`error: ${error}`);\n    }\n}\n\nasync function getSectorList(){\n\n    let response = await fetch(sector_get_url)\n    let list = await response.json()\n    return list;\n}\n\nfunction updateSelectFieldOptions(response, id){\n    let selectField = document.getElementById(id);\n    //remove existing options\n    while (selectField.hasChildNodes()){\n        selectField.removeChild(selectField.firstChild);\n    }\n    for (let item of response.data){\n        //append child option element to it with above as content\n        var option = document.createElement('option');\n        option.textContent = item.name;\n        option.value = item.id;\n        selectField.appendChild(option);\n    }    \n}\n\nfunction makeForm(object){\n    let form = new FormData();\n    Object.entries(object).forEach(([k,v]) => form.set(k,v));\n    return form;\n}\n\nfunction postForm(path, params, method='post'){\n    const form = document.createElement('form');\n    form.method = method;\n    form.action = path;\n    \n    for (const key in params){\n        if (params.hasOwnProperty(key)){\n            const hidden_field = document.createElement('input');\n            hidden_field.type = \"hidden\";\n            hidden_field.name = key;\n            hidden_field.value = params[key];\n\n            form.append(hidden_field);\n        }\n    }\n\n    document.body.appendChild(form);\n    form.submit();\n}\n\n\n\n//# sourceURL=webpack:///./src/scripts/forms.js?");

/***/ }),

/***/ "wumF":
/*!***************************************!*\
  !*** ./src/components/message-row.js ***!
  \***************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("let message_row = {\n    props:['message'],\n    template: `\n            <tr v-bind:style=\"!message.read ? 'font-weight:bold' : ''\" class=\"d-flex\">\n                <td class=\"d-none d-md-block col-1\">\n                    <input\n                    class=\"select\"\n                    type=\"checkbox\"\n                    v-bind:value=\"message.id\"\n                    v-on:change=\"updateList('selected-messages', [$event.target.checked, $event.target.value])\">\n                    </td>\n                <td class=\"inbox_id\" hidden>{{message.id}}</td>\n                <td v-on:click=\"$emit('show-message')\" class=\"col-2\">{{message.sender_full_name}}</td>\n                <td v-on:click=\"$emit('show-message')\" class=\"col-2\">{{message.subject}}</td>\n                <td v-on:click=\"$emit('show-message')\" class=\"col-6 folder-message-body\">{{message.body}}</td>\n                <td v-on:click=\"$emit('show-message')\" class=\"col-1\">{{localize_time}}</td>\n            </tr>`,\n    computed: {\n        localize_time: function(){\n            let now = new Date();\n            let msg_time = new Date(this.message.timestamp);\n            if (msg_time.toDateString() == now.toDateString()){\n                return msg_time.toLocaleString('en-us', {timeStyle: \"short\"})\n            } else {\n                return msg_time.toLocaleString('en-us', {dateStyle: \"medium\"})\n            }\n        }\n    },\n    methods: {\n        updateValue: function(value){\n            this.$emit('input', value);\n        },\n        updateList: function(message,value){\n            this.$emit(message, value);\n        }\n    },\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (message_row);\n\n//# sourceURL=webpack:///./src/components/message-row.js?");

/***/ }),

/***/ "yPs9":
/*!**************************************!*\
  !*** ./src/components/folder-nav.js ***!
  \**************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var _nav_list_button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nav-list-button */ \"+xvQ\");\n\n\nconst folder_nav = ('folder-nav', {\n    components:{\n        \"nav-list-button\": _nav_list_button__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"],\n    },\n    props: {\n        eventSignal: Object,\n        folderIsVisible: Boolean,\n        messageIsVisible: Boolean,\n        moveLinksVisible: Boolean,\n        newMessageIsVisible: Boolean,\n        urls: Object,\n    },\n    template:`\n    <nav class=\"navbar\">\n        \n        <ul class=\"nav\">\n            <nav-list-button\n                 ref=\"back-button\"\n                 v-if=\"messageIsVisible || newMessageIsVisible\"\n                 v-bind:event-signal=\"eventSignal.backToLast\"\n                 v-on:back-to-last=\"$emit(eventSignal.backToLast)\"\n                 data-toggle=\"tooltip\"\n                 data-placement=\"top\"\n                 title=\"Navigate Back\">\n                    <i class=\"fas fa-arrow-left fa-lg\"></i>\n                </nav-list-button>\n\n            <li v-if=\"folderIsVisible\"\n               ref=\"folder-list\"\n               class=\"nav-item\">\n                <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">View Folder</a>\n                <div class=\"dropdown-menu\">\n                    <a class=\"dropdown-item\" v-bind:href=\"urls.view_inbox\" >Inbox</a>\n                    <a class=\"dropdown-item\" v-bind:href=\"urls.view_sent\" >Sent</a>\n                    <a class=\"dropdown-item\" v-bind:href=\"urls.view_archive\" >Archive</a>\n                    <a class=\"dropdown-item\" v-bind:href=\"urls.view_trash\" >Trash</a>\n                </div>\n            </li>\n            <nav-list-button\n              ref=\"move-links-delete\"\n              v-if=\"moveLinksVisible\"\n              v-bind:event-signal=\"eventSignal.moveMessage\"\n              v-on:move-message=\"$emit(eventSignal.moveMessage, 'trash')\">\n              Delete\n            </nav-list-button>\n            <nav-list-button\n              ref=\"move-links-archive\"\n              v-if=\"moveLinksVisible\"\n              v-bind:event-signal=\"eventSignal.moveMessage\"\n              v-on:move-message=\"$emit(eventSignal.moveMessage, 'archive')\">\n            Archive</nav-list-button>\n        </ul>\n\n        <ul class=\"nav ml-auto justify-content-end\">\n            <nav-list-button\n                ref=\"new-message\"\n                v-if=\"folderIsVisible\"\n                v-bind:event-signal=\"eventSignal.newMessage\"\n                v-on:new-message=\"$emit(eventSignal.newMessage)\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title=\"New Message\">\n                New Message\n            </nav-list-button>\n\n            <nav-list-button\n             ref=\"previous-message\"\n             v-if=\"messageIsVisible\"\n             v-bind:event-signal=\"eventSignal.updateActive\"\n             v-on:update-active-message=\"$emit(eventSignal.updateActive, -1)\"\n             data-toggle=\"tooltip\"\n             data-placement=\"top\"\n             title=\"Previous Message\">\n                <i class=\"fas fa-angle-left fa-lg\"></i>\n            </nav-list-button>\n\n            <nav-list-button\n             ref=\"next-message\"\n             v-if=\"messageIsVisible\"\n             v-bind:event-signal=\"eventSignal.updateActive\"\n             v-on:update-active-message=\"$emit(eventSignal.updateActive, +1)\"\n             data-toggle=\"tooltip\"\n             data-placement=\"top\"\n             title=\"Next Message\">\n                <i class=\"fas fa-angle-right fa-lg\"></i>\n            </nav-list-button>\n\n            <nav-list-button\n             id=\"reply\"\n             ref=\"reply-to\"\n             v-if=\"messageIsVisible\"\n             v-bind:event-signal=\"eventSignal.replyToMessage\"\n             v-on:reply-to-message=\"$emit(eventSignal.replyToMessage)\"\n             data-toggle=\"tooltip\"\n             data-placement=\"top\"\n             title=\"Reply\">\n                <i class=\"fas fa-reply fa-lg\"></i>\n            </nav-list-button>\n        </ul>\n    </nav>`,\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (folder_nav);\n\n\n//# sourceURL=webpack:///./src/components/folder-nav.js?");

/***/ })

},[["OTWU","runtime","vendors"]]]);