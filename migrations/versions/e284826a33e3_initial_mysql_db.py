"""initial mysql db

Revision ID: e284826a33e3
Revises: 
Create Date: 2019-09-16 09:52:39.364095

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e284826a33e3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('provider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('_name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('_telephone', sa.String(length=24), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_provider')),
    sa.UniqueConstraint('_telephone', name=op.f('uq_provider__telephone')),
    sa.UniqueConstraint('email', name=op.f('uq_provider_email'))
    )
    op.create_index(op.f('ix_provider__name'), 'provider', ['_name'], unique=False)
    op.create_table('sector',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sector'))
    )
    op.create_index(op.f('ix_sector_name'), 'sector', ['name'], unique=True)
    op.create_table('state',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('state_short', sa.String(length=24), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_state'))
    )
    op.create_index(op.f('ix_state_name'), 'state', ['name'], unique=False)
    op.create_index(op.f('ix_state_state_short'), 'state', ['state_short'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('_email', sa.String(length=120), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('password_set_date', sa.Date(), nullable=True),
    sa.Column('_first_name', sa.String(length=64), nullable=False),
    sa.Column('_last_name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user__email'), 'user', ['_email'], unique=True)
    op.create_index(op.f('ix_user__first_name'), 'user', ['_first_name'], unique=False)
    op.create_index(op.f('ix_user__last_name'), 'user', ['_last_name'], unique=False)
    op.create_index(op.f('ix_user_password_set_date'), 'user', ['password_set_date'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unknown', sa.Boolean(), nullable=True),
    sa.Column('_line1', sa.String(length=128), nullable=True),
    sa.Column('_line2', sa.String(length=128), nullable=True),
    sa.Column('zip', sa.String(length=20), nullable=True),
    sa.Column('_city', sa.String(length=64), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.Column('state_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], name=op.f('fk_address_provider_id_provider'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['state_id'], ['state.id'], name=op.f('fk_address_state_id_state')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_address_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_address'))
    )
    op.create_index(op.f('ix_address__city'), 'address', ['_city'], unique=False)
    op.create_index(op.f('ix_address_latitude'), 'address', ['latitude'], unique=False)
    op.create_index(op.f('ix_address_longitude'), 'address', ['longitude'], unique=False)
    op.create_index(op.f('ix_address_unknown'), 'address', ['unknown'], unique=False)
    op.create_index(op.f('ix_address_zip'), 'address', ['zip'], unique=False)
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('sector_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sector_id'], ['sector.id'], name=op.f('fk_category_sector_id_sector')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category'))
    )
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=True)
    op.create_table('friendrequest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.Column('requestor_id', sa.Integer(), nullable=False),
    sa.Column('date_sent', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['user.id'], name=op.f('fk_friendrequest_friend_id_user'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['requestor_id'], ['user.id'], name=op.f('fk_friendrequest_requestor_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_friendrequest'))
    )
    op.create_index(op.f('ix_friendrequest_date_sent'), 'friendrequest', ['date_sent'], unique=False)
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('_name', sa.String(length=64), nullable=False),
    sa.Column('_description', sa.String(length=120), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['user.id'], name=op.f('fk_group_admin_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_group'))
    )
    op.create_index(op.f('ix_group__name'), 'group', ['_name'], unique=True)
    op.create_table('user_friend',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('friend_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['user.id'], name=op.f('fk_user_friend_friend_id_user')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_friend_user_id_user'))
    )
    op.create_table('category_provider',
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_category_provider_category_id_category')),
    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], name=op.f('fk_category_provider_provider_id_provider'))
    )
    op.create_table('grouprequest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('requestor_id', sa.Integer(), nullable=False),
    sa.Column('date_sent', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name=op.f('fk_grouprequest_group_id_group'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['requestor_id'], ['user.id'], name=op.f('fk_grouprequest_requestor_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_grouprequest'))
    )
    op.create_index(op.f('ix_grouprequest_date_sent'), 'grouprequest', ['date_sent'], unique=False)
    op.create_table('review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('_description', sa.String(length=120), nullable=True),
    sa.Column('service_date', sa.Date(), nullable=True),
    sa.Column('_comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_review_category_id_category')),
    sa.ForeignKeyConstraint(['provider_id'], ['provider.id'], name=op.f('fk_review_provider_id_provider'), ondelete='cascade'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_review_user_id_user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_review'))
    )
    op.create_index(op.f('ix_review_timestamp'), 'review', ['timestamp'], unique=False)
    op.create_table('user_group',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name=op.f('fk_user_group_group_id_group')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_group_user_id_user'))
    )
    op.create_table('picture',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', sa.String(length=120), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('thumb', sa.String(length=120), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['review_id'], ['review.id'], name=op.f('fk_picture_review_id_review'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_picture'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('picture')
    op.drop_table('user_group')
    op.drop_index(op.f('ix_review_timestamp'), table_name='review')
    op.drop_table('review')
    op.drop_index(op.f('ix_grouprequest_date_sent'), table_name='grouprequest')
    op.drop_table('grouprequest')
    op.drop_table('category_provider')
    op.drop_table('user_friend')
    op.drop_index(op.f('ix_group__name'), table_name='group')
    op.drop_table('group')
    op.drop_index(op.f('ix_friendrequest_date_sent'), table_name='friendrequest')
    op.drop_table('friendrequest')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_table('category')
    op.drop_index(op.f('ix_address_zip'), table_name='address')
    op.drop_index(op.f('ix_address_unknown'), table_name='address')
    op.drop_index(op.f('ix_address_longitude'), table_name='address')
    op.drop_index(op.f('ix_address_latitude'), table_name='address')
    op.drop_index(op.f('ix_address__city'), table_name='address')
    op.drop_table('address')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_password_set_date'), table_name='user')
    op.drop_index(op.f('ix_user__last_name'), table_name='user')
    op.drop_index(op.f('ix_user__first_name'), table_name='user')
    op.drop_index(op.f('ix_user__email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_state_state_short'), table_name='state')
    op.drop_index(op.f('ix_state_name'), table_name='state')
    op.drop_table('state')
    op.drop_index(op.f('ix_sector_name'), table_name='sector')
    op.drop_table('sector')
    op.drop_index(op.f('ix_provider__name'), table_name='provider')
    op.drop_table('provider')
    # ### end Alembic commands ###
